package edu.ren.datastructure.interviewBit.twopointer;

import org.junit.Test;

import static org.hamcrest.Matchers.is;
import static org.junit.Assert.*;

public class MinimiseMinMaxDifferenceTest {
    MinimiseMinMaxDifference minimiseMinMaxDifference = new MinimiseMinMaxDifference();

    @Test
    public void minDifference() {
        Integer[] arr1 = {1, 4, 5, 8, 10};
        Integer[] arr2 = {6, 9, 15};
        Integer[] arr3 = {2, 3, 6, 6};
        assertThat(minimiseMinMaxDifference.minDifference(arr1, arr2, arr3), is(1));
    }

    @Test
    public void minDifference_1() {
        Integer[] arr1 = {1, 4, 8, 10};
        Integer[] arr2 = {6, 9, 15};
        Integer[] arr3 = {2, 3, 6, 6};
        assertThat(minimiseMinMaxDifference.minDifference(arr1, arr2, arr3), is(2));
    }

    @Test
    public void minDifference_2() {
        Integer[] arr1 = {1, 4, 5, 8, 10};
        Integer[] arr2 = {6, 9, 10};
        Integer[] arr3 = {2, 3, 6, 10};
        assertThat(minimiseMinMaxDifference.minDifference(arr1, arr2, arr3), is(0));
    }

    @Test
    public void minDifference_3() {
        Integer[] arr1 = {1, 4, 5, 10, 10, 11, 12};
        Integer[] arr2 = {6, 7, 8, 12};
        Integer[] arr3 = {2, 3, 6, 12};
        assertThat(minimiseMinMaxDifference.minDifference(arr1, arr2, arr3), is(0));
    }

    @Test
    public void minDifference_4() {
        Integer[] arr1 = {7, 9, 58, 89, 126, 137, 178, 189, 193, 221, 268, 295, 304, 347, 379, 411, 432, 435, 445, 461, 507, 523, 568, 614, 625, 642, 647, 696, 719, 753, 773, 780, 802, 843, 845, 865, 900, 901, 901, 950, 954, 1001, 1022, 1068, 1080, 1095, 1121, 1151, 1167, 1216, 1217, 1258, 1290, 1303, 1303, 1346, 1368, 1417, 1434, 1441, 1449, 1471, 1518, 1567, 1612, 1626, 1628, 1648, 1673, 1704, 1741, 1742, 1789, 1807, 1809, 1835, 1867, 1887, 1923, 1937, 1971, 1986, 2008, 2045, 2048, 2065, 2082, 2095, 2099, 2147, 2160, 2180, 2204, 2208, 2217, 2235, 2244, 2275, 2309, 2355, 2364, 2383, 2432, 2446, 2447, 2468, 2470, 2476, 2513, 2517, 2536, 2537, 2571, 2578, 2607, 2634, 2663, 2672, 2709, 2714, 2762, 2768, 2778, 2779, 2815, 2821, 2846, 2895, 2941, 2984, 3026, 3070, 3076, 3105, 3115, 3143, 3172, 3178, 3226, 3268, 3309, 3322, 3348, 3367, 3368, 3386, 3405};
        Integer[] arr2 = {-485, -441, -396, -383, -361, -339, -338, -299, -273, -249, -234, -229, -216, -197, -159, -133, -92, -71, -53, -40, -6, 19, 30, 66, 114, 122, 136, 148, 191, 234, 262, 308, 319, 337, 382, 398, 416, 416, 444, 460, 462, 498, 511, 547, 565, 604, 606, 632, 670, 687, 728, 740, 752, 787, 812, 834, 835, 851, 863, 903, 908, 917, 936, 957, 983, 1014, 1033, 1048, 1069, 1101, 1139, 1188, 1212, 1228, 1235, 1276, 1322, 1322, 1352, 1376, 1425, 1454, 1482, 1483, 1489, 1510, 1551, 1584, 1590, 1601, 1616, 1647, 1671, 1676, 1718, 1764, 1793, 1810, 1837, 1885, 1891, 1929, 1929, 1934, 1970, 1996, 2035, 2054, 2094, 2125, 2157, 2200, 2201, 2238, 2243, 2291, 2331, 2356};
        Integer[] arr3 = {90, 100, 110, 145, 176, 190, 209, 254, 275, 322, 341, 366, 401, 427, 469, 487, 507, 515, 560, 603, 640, 685, 708, 746, 769, 795, 808, 848, 858, 870, 881, 887, 924, 949, 990, 1024, 1032, 1055, 1101, 1132, 1177, 1198, 1203, 1218, 1247, 1251, 1279, 1286, 1328, 1367, 1416, 1457, 1489, 1505, 1517, 1564, 1605, 1636, 1685, 1700, 1727, 1732};
        assertThat(minimiseMinMaxDifference.minDifference(arr1, arr2, arr3), is(2));
    }

    @Test
    public void minDifference_5() {
        Integer[] arr1 = {-33, 13, 49, 72, 75, 75, 116, 161, 176, 190, 237, 241, 286, 308, 333, 343, 360, 370, 374, 377, 423, 424, 459, 468, 492, 495, 520, 569, 592, 615, 621, 643, 689, 721, 734, 747, 754, 763, 806, 812, 817, 841, 856, 858, 883, 915, 955, 955, 974, 1009, 1034, 1075, 1112, 1146, 1183, 1203, 1213, 1239, 1263, 1277, 1291, 1305, 1331, 1339, 1380, 1400, 1449, 1486, 1520, 1537, 1581, 1617, 1624, 1658, 1701, 1720, 1735, 1754, 1800, 1815, 1857, 1874, 1909, 1926, 1953, 1957, 1983, 1984, 2006, 2010, 2048, 2049, 2097, 2103, 2134, 2173};
        Integer[] arr2 = {-515, -486, -443, -428, -426, -422, -414, -409, -384, -380, -371, -361, -354, -345, -338, -336, -321, -294, -292, -275, -260, -217, -209, -170, -148, -105, -97, -86, -85, -52, -9, 40, 69, 79, 115, 155, 158, 166, 199, 199, 247, 252, 289, 291, 298, 342, 367, 384, 415, 426, 460, 487, 509, 512, 538, 584, 601, 601, 615, 650, 659, 669, 708, 755, 775, 788, 806, 819, 831, 868, 876, 916, 951, 974, 1014, 1029, 1030, 1045, 1080, 1088, 1094, 1098, 1136, 1165, 1203, 1233, 1242, 1265, 1289, 1314, 1350, 1387, 1424, 1425, 1426, 1441, 1454, 1457, 1458, 1483, 1513, 1528, 1532, 1579, 1623, 1635, 1668, 1713, 1760, 1786, 1799, 1807, 1833, 1856, 1869, 1911, 1939, 1947, 1974, 2005, 2046, 2068, 2111, 2115, 2160, 2199, 2244, 2256, 2282, 2296, 2328, 2371, 2404, 2450, 2465, 2497, 2524, 2564, 2602, 2642, 2681, 2714, 2733, 2733, 2780, 2826, 2833};
        Integer[] arr3 = {78, 111, 141, 153, 154, 197, 238, 259, 294, 295, 313, 338, 374, 382, 404, 433, 453, 482, 501, 538, 539, 570, 595, 604, 628, 670, 710, 724, 754, 761, 766, 806, 854, 863, 872, 878, 888, 935, 953, 963, 1010, 1033, 1050, 1064, 1088, 1123, 1134, 1180, 1219, 1242, 1277, 1312};

        assertThat(minimiseMinMaxDifference.minDifference(arr1, arr2, arr3), is(0));
    }
}